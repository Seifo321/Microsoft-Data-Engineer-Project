{
	"name": "BikeStoresInsights",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sales_orders_parquet",
						"type": "DatasetReference"
					},
					"name": "orders"
				},
				{
					"dataset": {
						"referenceName": "sales_orders_items_parquet",
						"type": "DatasetReference"
					},
					"name": "orderitems"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputCSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select2"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_id as integer,",
				"          customer_id as integer,",
				"          order_status as integer,",
				"          order_date as date,",
				"          required_date as date,",
				"          shipped_date as date,",
				"          store_id as integer,",
				"          staff_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> orders",
				"source(output(",
				"          order_id as integer,",
				"          item_id as integer,",
				"          product_id as integer,",
				"          quantity as integer,",
				"          list_price as decimal(10,2),",
				"          discount as decimal(4,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> orderitems",
				"orders, orderitems join(orders@order_id == orderitems@order_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          customer_id,",
				"          order_id = orders@order_id,",
				"          order_id = orderitems@order_id,",
				"          item_id,",
				"          store_id,",
				"          list_price",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(customer_id,",
				"          order_id,",
				"          store_id),",
				"     item_id = count(item_id),",
				"          list_price = sum(list_price)) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          customer_id,",
				"          order_id,",
				"          store_id,",
				"          {number of orders} = item_id,",
				"          {total purchases} = list_price",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sort(desc({total purchases}, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Output.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}